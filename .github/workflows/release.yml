name: "release"
on:
  push:
    branches: [main]
    paths:
      - Cargo.toml
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: write

jobs:
  release:
    name: release
    runs-on: ubuntu-latest
    steps:
      - name: setup
        uses: godot-package-manager/cli/.github/actions/setup@main

      - name: test
        uses: godot-package-manager/cli/.github/actions/test@main

      - name: build
        id: build
        run: |
          version="$(grep "version = " Cargo.toml | head -n 1 | awk -F '"' '{ print $2 }')"
          [[ $(git tag | grep -c "$version") != 0 ]] && exit 0
          echo "release=$version" >> $GITHUB_OUTPUT
          echo "## building" > $GITHUB_STEP_SUMMARY
          cargo build --target x86_64-pc-windows-gnu --target x86_64-unknown-linux-gnu -r
          export CC=o64-clang; export CXX=o64-clang++; cargo build --target x86_64-apple-darwin -r
          mv target/x86_64-apple-darwin/release/godot-package-manager target/x86_64-apple-darwin/release/godot-package-manager.apple.x86_64 # no conflicts
          mv target/x86_64-unknown-linux-gnu/release/godot-package-manager target/x86_64-unknown-linux-gnu/release/godot-package-manager.x86_64
          echo -e "## releasing\n$(ls target/*/release)" > $GITHUB_STEP_SUMMARY

      - name: release artifacts
        if: steps.build.outputs.release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            target/x86_64-unknown-linux-gnu/release/godot-package-manager.x86_64
            target/x86_64-apple-darwin/release/godot-package-manager.apple.x86_64
            target/x86_64-pc-windows-gnu/release/godot-package-manager.exe
          tag_name: ${{ steps.build.outputs.release }}
          name: gpm v${{ steps.build.outputs.release }}
          body: "## :tada:"
          fail_on_unmatched_files: true
          generate_release_notes: true
